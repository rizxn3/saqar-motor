generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["public"]
}

model Product {
  id               String   @id @default(uuid())
  name             String
  partNumber       String   @unique
  price            Float
  category         String
  manufacturer     String
  description      String?
  specifications   Json?
  features         String[]
  image            String?
  additionalImages String[]
  inStock          Boolean  @default(true)
  quantity         Int      @default(0)
  minOrderQuantity Int      @default(1)
  weight           Float?
  dimensions       Json?
  warranty         String?
  compatibleModels String[]
  tags             String[]
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model auth {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email      String   @unique
  password   String
  created_at DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at DateTime @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  users      users?

  @@index([email])
  @@schema("public")
}

/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model users {
  id           String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  auth_id      String    @unique @db.Uuid
  name         String
  role         user_role @default(USER)
  company_name String?
  created_at   DateTime  @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  updated_at   DateTime  @default(dbgenerated("timezone('utc'::text, now())")) @db.Timestamptz(6)
  auth         auth      @relation(fields: [auth_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([auth_id])
  @@schema("public")
}

enum user_role {
  USER
  ADMIN
  VENDOR

  @@schema("public")
}
